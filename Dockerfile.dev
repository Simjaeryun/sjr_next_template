FROM node:16.15.0 as build

RUN addgroup --system appgroup
RUN adduser --system appusr --ingroup appgroup

# 작업 폴더를 만들고 npm 설치
RUN mkdir /usr/src/app
RUN chown -R appusr:appgroup /usr/src/app

USER appusr:appgroup

WORKDIR /usr/src/app
ENV PATH /usr/src/app/node_modules/.bin:$PATH

COPY --chown=appusr:appgroup package.json /usr/src/app/package.json
COPY --chown=appusr:appgroup tsconfig.json /usr/src/app/tsconfig.json
COPY --chown=appusr:appgroup changelog.config.js /usr/src/app/changelog.config.js
COPY --chown=appusr:appgroup config.ts /usr/src/app/config.ts
COPY --chown=appusr:appgroup jest.setup.ts /usr/src/app/jest.setup.ts
COPY --chown=appusr:appgroup next.config.js /usr/src/app/next.config.js
COPY --chown=appusr:appgroup src /usr/src/app/src
COPY --chown=appusr:appgroup .husky /usr/src/app/.husky
COPY --chown=appusr:appgroup public /usr/src/app/public
COPY --chown=appusr:appgroup app.d.ts /usr/src/app/app.d.ts
COPY --chown=appusr:appgroup yarn.lock /usr/src/app/yarn.lock
COPY --chown=appusr:appgroup .env /usr/src/app/.env
COPY --chown=appusr:appgroup .env.development /usr/src/app/.env.development
COPY --chown=appusr:appgroup .env.production /usr/src/app/.env.production

RUN yarn cache clean
RUN yarn install

RUN yarn run build

EXPOSE 3000
CMD ["yarn", "run", "start"]